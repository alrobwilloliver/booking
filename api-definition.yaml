openapi: 3.0.0
info:
  version: 1.0.0
  title: Bubble - BE test
servers:
  - url: 'http://localhost:3000/v1'
paths:
  /login:
    post:
      summary: 'Authentication endpoint: Authenticate a user based on his credentials'
      operationId: authUser
      tags:
        - login
        - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: 'Authentication response: The user token'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bookings:
    get:
      security:
        - BearerAuth: []
      responses:
        '200':
          description: 'Bookings response: The users bookings'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ArrayOfBookings'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /bookings/{id}/confirm:
    put:
      security:
        - BearerAuth: []
      parameters:
        - name: id
          in: path
          description: Booking ID
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '201':
          description: 'Booking confirm response: This response is empty'  
components:
  schemas:
    Login:
      type: object
      required:
        - login
        - password
      properties:
        login:
          type: string
        password:
          type: string
    Token:
      type: object
      required:
        - token
      properties:
        token:
          type: string
    Booking:
      type: object
      required:
        - id
      properties:
        id:
          type: integer
          format: int32
        title: 
          type: string
        startDate: 
          type: string
        endDate: 
          type: string
        sitter: 
          type: object
          properties:
            firstName: 
              type: string
            lastName: 
              type: string
        confirmed:
          type: boolean
    ArrayOfBookings:
      type: array
      items:
        $ref: '#/components/schemas/Booking'
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT # Random value here. You can actually generate any format of token you want
# security:
#   - BearerAuth: []